- nodes           = paginate_scope(local_assigns[:nodes])
- container       = local_assigns[:container]
- selected_status = local_assigns[:selected_status]
- more_link       = local_assigns[:more_link]

%table.main
  %thead
    %tr
      %th(colspan="3")
      %th(colspan="5")
        Resources
    %tr
      %th.status
      %th.hostname
        Hostname
      - unless container.nil?
        %th Source
      %th.latest_report.desc
        &darr; Latest report
      %th
        All
      %th
        Failed
      %th
        Pending
      %th
        Changed
      %th
        Unchanged
  %tbody
    - if nodes.present?
      %tr
        %td{:colspan => 3}  Total
        - ["total", "failed", "pending", "changed", "unchanged"].each do |status|
          - options = {:conditions => "metrics.category = 'resources' AND metrics.name = '#{status}'", :joins => 'left join metrics on metrics.report_id = nodes.last_apply_report_id'}
          %td= ['all', 'index'].include?(selected_status) ? Node.sum(:value, options).to_i : Node.send(selected_status).sum(:value, options).to_i
      - nodes.each do |node|
        - sources = container.nodes_with_sources[node] unless container.nil?
        %tr[node]{:class => "#{'active' if node == @node}"}
          %td.status{:class => node.status}
            %span{:title => node_title_text(node)}
              = node_status_icon(node)
          %td.hostname
            = link_to h(node.name), node
          - unless container.nil?
            %td
              - if sources.include?(container)
                = node.name
              - else
                = sources.map{|s| link_to(s.name,s)}.join(", ")
          %td.latest_report
            = node.last_apply_report ? node.last_apply_report.time : "Has not reported"
          - ["total", "failed", "pending", "changed", "unchanged"].each do |status|
            %td
              = node.last_apply_report.metric_value("resources", status).to_i if node.last_apply_report
    - else
      %td.empty{:colspan => container.nil? ? 8 : 9}
        = describe_no_matches_for :nodes
  - if nodes.present?
    %tfoot
      %tr
        %td{:colspan => container.nil? ? 8 : 9 }
          = pagination_for nodes, more_link
= link_to "Export nodes as CSV", url_for(:controller => "nodes", :action => selected_status == "all" ? :index : selected_status, :format => 'csv')
